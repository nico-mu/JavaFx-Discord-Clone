plugins {
    id 'org.fulib.fulibGradle' version '0.4.0'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id "io.freefair.jsass-java" version "6.0.0-m2"
    id 'application'
}


mainClassName = 'de.uniks.stp.Launcher'
group = 'de.uniks.stp'
version '1.0.0'

javafx {
    version = "12"
    modules = ['javafx.graphics', 'javafx.fxml', 'javafx.base', 'javafx.controls']
}

dependencies {
    compile project(':processor')

    compile 'com.jfoenix:jfoenix:9.0.10'

    implementation group: 'com.konghq', name: 'unirest-java', version: '3.11.09'
    implementation group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1'
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly-client', version: '1.15'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.31.Final'
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'

    fulibScenarios group: 'org.fulib', name: 'fulibScenarios', version: '1.7.0'
    implementation group: 'org.fulib', name: 'fulibYaml', version: '1.4.0'
    testImplementation group: 'org.fulib', name: 'fulibTools', version: '1.4.1'
    testImplementation group: 'org.fulib', name: 'fulibTables', version: '1.4.0'
    testImplementation group: 'org.fulib', name: 'fulibMockups', version: '0.3.1'
    testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testCompile "org.testfx:testfx-junit5:4.0.16-alpha"
    testRuntime "org.testfx:openjfx-monocle:jdk-12.0.1+2"

    testCompile 'org.mockito:mockito-core:2.22.0'
    annotationProcessor project(':processor')
}

test {
    useJUnitPlatform()
    jvmArgs "-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dprism.order=sw -Dprism.text=t2k -Dtestfx.setup.timeout=2500"
}

task cloneCssFiles(type: Copy) {
    delete "$projectDir/src/main/resources/de/uniks/stp/style/css"
    from "$buildDir/jsass/main/de/uniks/stp/style/scss"
    include "**/*.css"
    into "$projectDir/src/main/resources/de/uniks/stp/style/css"
}
compileSass.finalizedBy(cloneCssFiles)

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
